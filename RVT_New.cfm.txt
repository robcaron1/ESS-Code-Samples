<!--- Variables --->
<cfset CurrentDate = DateFormat(Now(), "mm/dd/yyyy")>
<cfset CurrentTime = TimeFormat(Now(), "HH:mm")>
<cfset CurrentUser = UCase(cgi.Remote_User)>

<cfquery name="UserInfo" datasource="CMS_HEAT">
 SELECT DISTINCT
  FIR_NAME + ' ' + LAST_NAME AS UserName
 FROM
  dbo.Profile
 WHERE
  CustID = '#CurrentUser#'
</cfquery>

<cfquery name="VanSource" datasource="CMS_RVT">
	dbo.usp_RVT_Van_Info
</cfquery>

<cfquery name="VanInfo" dbtype="query">
 SELECT DISTINCT
  *
 FROM
  VanSource
 WHERE
<!---   (InUse = 'N' and VanHub = '#url.Hub_Filter#') --->
  VanHub = '#url.Hub_Filter#'
<!---  or VanNbr='#url.VanNbr#' --->
 ORDER BY
  SeqNbr
</cfquery>
<!--- <cfquery name="VanInfo" datasource="CMS_RVT">
 SELECT DISTINCT
  *
 FROM
  dbo.RVT_Vans
 ORDER BY
  VanNbr
</cfquery>
 --->
<!--- <cfquery name="TrainInfo" datasource="CMS_RVT">
 EXEC dbo.usp_RVT_MAIN_TRAIN_SOURCE
</cfquery>

<cfquery name="TrainInfoChk" dbtype="query">
	Select Distinct Trn_Symb + ' ' + Trn_Day as Train_Sym
	From TrainInfo
<cfif isDefined("Trn_Symb1") and isDefined("Trn_Day")>
	Where Trn_Symb = '#Trn_Symb1#' and Trn_Day = '#Trn_Day1#'
</cfif>
</cfquery>
 --->
<cfquery name="LocationInfo" datasource="CMS_RVT">
 EXEC dbo.usp_RVT_Hub_Loc_Info
  @HUB_FILTER = '#url.Hub_Filter#'
</cfquery>

<html>
<head>
	<title>MPV Tracking System</title>
	<CF_SSI virtual="/ssi/apps/headwhite.txt">
	<CF_SSI virtual="/ssi/apps/groupbox/groupbox.txt">
	<CF_SSI VIRTUAL="/ssi/apps/required/required.txt">
	<CF_SSI VIRTUAL="/ssi/apps/tooltip/tooltip.txt">
	<CF_SSI VIRTUAL="/ssi/apps/calendar/calendar.txt">
	<CF_SSI VIRTUAL="/ssi/apps/time/time.txt">
	<CF_SSI VIRTUAL="/ssi/apps/pleasewait/inlinePleaseWait.txt">
 <cfoutput>
 <script language="javascript">
		<!--
				
			function trim(stringToTrim) {
				return stringToTrim.replace(/^\s+|\s+$/g,"");
			}

			function ltrim(stringToTrim) {
				return stringToTrim.replace(/^\s+/,"");
			}

			function rtrim(stringToTrim) {
				return stringToTrim.replace(/\s+$/,"");
			}

			function AddRecord(){

        var trnsymb = trim(document.main.Trn_Symb_Src.value);
        var trnsymb2 = trim(document.main.Trn_Symb_Src2.value);
        var trnsymb3 = trim(document.main.Trn_Symb_Src3.value);
		if (trnsymb.length == 0){
		  alert('Must select a Train Symbol');
		  }
		else if (document.main.DeskID.value == ''|| document.main.DeskID.value.substring(0,1) == ' '){
		  alert('Must enter a Desk ID');
		  }
		else if (document.main.VanNbr.value == ''){
		  alert('Must select a Van Number');
		}else if (document.main.TimeNeeded.value.length != 5 || document.main.DateNeeded.value.length != 10 || document.main.TimeNeeded.value.substring(0,4) == 'ASAP' || document.main.TimeNeeded.value.substring(1,4) == 'ASAP'){
				  alert('Must enter a valid Time and Date Needed\nASAP is no longer a valid time');		
		} else {

				inlinePleaseWaitSubmit(main,1);
				document.main.action = "./RVT_NewProc.cfm";
        document.main.Trn_Day1.value = trnsymb.substring(trnsymb.length - 2);
        document.main.Trn_Symb1.value = trnsymb.substring(0,trnsymb.length - 3);
        document.main.Trn_Day2.value = trnsymb2.substring(trnsymb2.length - 2);
        document.main.Trn_Symb2.value = trnsymb2.substring(0,trnsymb2.length - 3);
        document.main.Trn_Day3.value = trnsymb3.substring(trnsymb3.length - 2);
        document.main.Trn_Symb3.value = trnsymb3.substring(0,trnsymb3.length - 3);
//        alert(document.main.Trn_Day.value);
//        alert(document.main.Trn_Symb.value);
//        alert(document.main.Trn_Symb_Src.value);
				document.main.submit();
				}
			}
			
			function chkDateNeeded(dDate) {

					DateFieldCheck(document.main.DateNeeded,'format: 1');
					if (document.main.DateNeeded.value == ''){
						nDate = new Date();
						newDate = (nDate.getMonth()+1) + '/' + nDate.getDate() + '/' + (nDate.getFullYear());
						document.main.DateNeeded.value = newDate;
					DateFieldCheck(document.main.DateNeeded,'format: 1');
					}	
						chDate = new Date(document.main.DateNeeded.value);
						if (isNaN(chDate.getMonth()+1)){
							document.main.DateNeeded.value = '';
							document.main.DateNeeded.focus();
						}else{						
							newDate = (chDate.getMonth()+1) + '/' + chDate.getDate() + '/' + (chDate.getFullYear());
//						document.main.DispatchDate.value = newDate;
//						document.main.ArrAtPUDate.value = newDate;
//						document.main.ActualPUDate.value = newDate;
//						document.main.ArrivalAtDestDate.value = newDate;
//						document.main.ReturnToHubDate.value = newDate;
//						DateFieldCheck(document.main.DispatchDate,'format: 1');
//						DateFieldCheck(document.main.ArrAtPUDate,'format: 1');
//						DateFieldCheck(document.main.ActualPUDate,'format: 1');
//						DateFieldCheck(document.main.ArrivalAtDestDate,'format: 1');
//						DateFieldCheck(document.main.ReturnToHubDate,'format: 1');
						}
					
			}

			function chkDispatch(dTime, aTime) {
				if (aTime != ""){
					timeFormatVerify(document.main.DispatchTime,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');
					daTime = document.main.DateNeeded.value + ' ' + dTime;
					var disTime = new Date(daTime);
					arTime = document.main.DateNeeded.value + ' ' + document.main.DispatchTime.value;
					var arrTime = new Date(arTime);
					cTime = (disTime.getTime() - arrTime.getTime())/60000;
					if (cTime > -1440 && cTime <=-1080){
						chDate = new Date(document.main.DateNeeded.value);
						chDate.setDate(chDate.getDate()-1);
						newDate = (chDate.getMonth()+1) + '/' + chDate.getDate() + '/' + (chDate.getFullYear());
						document.main.DispatchDate.value = newDate;
						DateFieldCheck(document.main.DispatchDate,'format: 1');
					}else{
						document.main.DispatchDate.value = document.main.DateNeeded.value;
					}						
				}
			}

			function chkArrAtPU(dTime, aTime) {
				if (aTime != ""){
					timeFormatVerify(document.main.ArrivalAtPU,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');
					daTime = document.main.DispatchDate.value + ' ' + dTime;
					var disTime = new Date(daTime);
					arTime = document.main.DispatchDate.value + ' ' + document.main.ArrivalAtPU.value;
					var arrTime = new Date(arTime);
					cTime = (arrTime.getTime() - disTime.getTime())/60000;
					if (cTime <= 0 && cTime > -1200){
						document.main.ArrivalAtPU.focus();
						alert('Invalid time entered. Time needs to be after Dispatch time.');
						document.main.ArrivalAtPU.value="";
					}
					if (cTime > 240){
						document.main.ArrivalAtPU.focus();
						alert('Invalid time entered. Time needs 4 hours or less after Dispatch time.');
						document.main.ArrivalAtPU.value="";
					}
					if (cTime <= -1200){
						chDate = new Date(document.main.DispatchDate.value);
						chDate.setDate(chDate.getDate()+1);
						newDate = (chDate.getMonth()+1) + '/' + chDate.getDate() + '/' + (chDate.getFullYear());
						document.main.ArrAtPUDate.value = newDate;
						DateFieldCheck(document.main.ArrAtPUDate,'format: 1');
					}
					if (cTime > 0 && cTime <= 240){
						document.main.ArrAtPUDate.value = document.main.DispatchDate.value;
					}
				}
			}

			function chkActualPU(dTime, aTime) {
				if (aTime != ""){
					timeFormatVerify(document.main.ActualPUTime,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');
					daTime = document.main.ArrAtPUDate.value + ' ' + dTime;
					var disTime = new Date(daTime);
					arTime = document.main.ArrAtPUDate.value + ' ' + document.main.ActualPUTime.value;
					var arrTime = new Date(arTime);
					cTime = (arrTime.getTime() - disTime.getTime())/60000;
					if (cTime < 0 && cTime > -1200){
						document.main.ActualPUTime.focus();
						alert('Invalid time entered. Time needs to be after or equal to Arrival at Pickup time.');
						document.main.ActualPUTime.value="";
					}
					if (cTime > 240){
						document.main.ActualPUTime.focus();
						alert('Invalid time entered. Time needs 4 hours or less after Arrival at Pickup time.');
						document.main.ActualPUTime.value="";
					}						
//					if (cTime >= 1440 && cTime <= 1680){
//						chDate = new Date(document.main.ActualPUDate.value);
//						chDate.setDate(chDate.getDate()-1);
//						newDate = (chDate.getMonth()+1) + '/' + chDate.getDate() + '/' + (chDate.getFullYear());
//						document.main.ActualPUDate.value = newDate;
//						DateFieldCheck(document.main.ActualPUDate,'format: 1');
//					}							
					if (cTime <= -1200){
						chDate = new Date(document.main.ArrAtPUDate.value);
						chDate.setDate(chDate.getDate()+1);
						newDate = (chDate.getMonth()+1) + '/' + chDate.getDate() + '/' + (chDate.getFullYear());
						document.main.ActualPUDate.value = newDate;
//						document.main.ArrivalAtDestDate.value = newDate;
//						document.main.ReturnToHubDate.value = newDate;
						DateFieldCheck(document.main.ActualPUDate,'format: 1');
//						DateFieldCheck(document.main.ArrivalAtDestDate,'format: 1');
//						DateFieldCheck(document.main.ReturnToHubDate,'format: 1');
					}						
					if (cTime >= 0 && cTime <= 240){
						document.main.ActualPUDate.value = document.main.ArrAtPUDate.value;
					}
				}
			}

			function chkArrDest(dTime, aTime) {
				if (aTime != ""){
					timeFormatVerify(document.main.ArrivalAtDestTime,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');
					daTime = document.main.ActualPUDate.value + ' ' + dTime;
					var disTime = new Date(daTime);
					arTime = document.main.ActualPUDate.value + ' ' + document.main.ArrivalAtDestTime.value;
					var arrTime = new Date(arTime);
					cTime = (arrTime.getTime() - disTime.getTime())/60000;
					if (cTime <= 0 && cTime > -1200){
						document.main.ArrivalAtDestTime.focus();
						alert('Invalid time entered. Time needs to be after Actual Pickup time.');
						document.main.ArrivalAtDestTime.value="";
					}
					if (cTime > 240){
						document.main.ArrivalAtDestTime.focus();
						alert('Invalid time entered. Time needs 4 hours or less after Actual Pickup time.');
						document.main.ArrivalAtDestTime.value="";
					}						
//					if (cTime >= 1440 && cTime <= 1680){
//						chDate = new Date(document.main.ArrivalAtDestDate.value);
//						chDate.setDate(chDate.getDate()-1);
//						newDate = (chDate.getMonth()+1) + '/' + chDate.getDate() + '/' + (chDate.getFullYear());
//						document.main.ArrivalAtDestDate.value = newDate;
//						DateFieldCheck(document.main.ArrivalAtDestDate,'format: 1');
//					}							
					if (cTime <= -1200){
						chDate = new Date(document.main.ActualPUDate.value);
						chDate.setDate(chDate.getDate()+1);
						newDate = (chDate.getMonth()+1) + '/' + chDate.getDate() + '/' + (chDate.getFullYear());
						document.main.ArrivalAtDestDate.value = newDate;
//						document.main.ReturnToHubDate.value = newDate;
						DateFieldCheck(document.main.ArrivalAtDestDate,'format: 1');
//						DateFieldCheck(document.main.ReturnToHubDate,'format: 1');
					}						
					if (cTime > 0 && cTime <= 240){
						document.main.ArrivalAtDestDate.value = document.main.ActualPUDate.value;
					}
				}
			}
			
			function chkRetHub(dTime, aTime) {
				if (aTime != ""){
					timeFormatVerify(document.main.ReturnToHubTime,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');
					daTime = document.main.ArrivalAtDestDate.value + ' ' + dTime;
					var disTime = new Date(daTime);
					arTime = document.main.ArrivalAtDestDate.value + ' ' + document.main.ReturnToHubTime.value;
					var arrTime = new Date(arTime);
					cTime = (arrTime.getTime() - disTime.getTime())/60000;
					if (cTime < 0 && cTime > -1200){
						document.main.ReturnToHubTime.focus();
						alert('Invalid time entered. Time needs to be after Arrival at Dest time.');
						document.main.ReturnToHubTime.value="";
					}
					if (cTime > 360){
						alert('Time entered is over 6 hours after Arrival at Dest time.');
						document.main.ReturnToHubDate.value = document.main.ArrivalAtDestDate.value;
					}						
//					if (cTime >= 1440 && cTime <= 1680){
//						chDate = new Date(document.main.ReturnToHubDate.value);
//						chDate.setDate(chDate.getDate()-1);
//						newDate = (chDate.getMonth()+1) + '/' + chDate.getDate() + '/' + (chDate.getFullYear());
//						document.main.ReturnToHubDate.value = newDate;
//						DateFieldCheck(document.main.ReturnToHubDate,'format: 1');
//					}							
					if (cTime <= -1200){
						chDate = new Date(document.main.ArrivalAtDestDate.value);
						chDate.setDate(chDate.getDate()+1);
						newDate = (chDate.getMonth()+1) + '/' + chDate.getDate() + '/' + (chDate.getFullYear());
						document.main.ReturnToHubDate.value = newDate;
						DateFieldCheck(document.main.ReturnToHubDate,'format: 1');
					}						
					if (cTime > 0 && cTime <= 240){
						document.main.ReturnToHubDate.value = document.main.ArrivalAtDestDate.value;
					}
				}
			}

		//-->
	</script>
 </cfoutput>
	<style>
  td.TopRow {
   border-top-style: solid;
   border-top-width: 1px;
  }
	</style>
</head>
<body>
	<cfmodule template="./RVT_menubar.cfm">
	<CF_SSI VIRTUAL="/ssi/apps/pleasewait/inlinePleaseWaitStart.txt">
	<table cellpadding="0" cellspacing="0" border="0" align="center">
	<tr>
		<td>
		<table cellpadding="0" cellspacing="0" border="0" align="center">
		<tr>
			<td>
			<form action="" method="_URL_" name="main" onSubmit="return checkValidateFields('PleaseWait');">
	       	<cfoutput>
	        	<input type="hidden" name="VanMgtArea" value="#Left(url.Hub_Filter, Len(url.Hub_Filter)-2)#">
				<input type="hidden" name="HubState" value="#Right(url.Hub_Filter, 2)#">
				<input type="hidden" name="Hub_Filter" value="#url.Hub_Filter#">
            	<input type="hidden" name="Trn_Day1" value="">
            	<input type="hidden" name="Trn_Symb1" value="">
            	<input type="hidden" name="Trn_Day2" value="">
            	<input type="hidden" name="Trn_Symb2" value="">
            	<input type="hidden" name="Trn_Day3" value="">
            	<input type="hidden" name="Trn_Symb3" value="">
            	<input type="hidden" name="LocoNbr" value="">
			<input type="hidden" name="AddEdit" value="add">
			<input type="hidden" name="TrainID" value="">
			</cfoutput>
			<cfoutput>
				<script language="JavaScript">
					<!--
					StartGroupBox("Add New Record for Hub - #url.Hub_Filter#","ALIGN: CENTER", "WIDTH: 100%");
					// -->
				</script>
            </cfoutput>
			<table cellpadding="0" cellspacing="0" border="0" width="100%">
			<tr>
         		<td align="center" class="TopRow"><b>Dispatch Info</b></td>
        	</tr>
			<tr>
         		<td align="center">
         		<cfoutput>
   					<table cellpadding="5" cellspacing="0" border="0" width="100%">
    				<tr>
			    		<td align="right">Desk ID:</td>
			         	<td align="left"><input type="textbox" size="12" maxlength="10" name="DeskID" class="fieldSM"></td>
            			<td>&nbsp;</td>
			         	<td align="right">User ID:</td>
			         	<td align="left"><input type="textbox" size="12" maxlength="10" name="UserID" class="fieldSM" value="#CurrentUser#"></td>
			         	<td align="right">Dispatcher:</td>
			         	<td align="left" colspan="2"><input type="textbox" size="30" maxlength="30" name="Dispatcher" class="fieldSM" value="#UserInfo.UserName#"></td><!--- "#UserInfo.UserName#" --->
            			<td colspan="3">&nbsp;</td>
           			</tr>
<!---     				<tr>
			        	<td align="right">Shift Start Date:</td>
 --->			         	<td align="left"><input type="hidden" size="12" maxlength="10" name="ShiftStartDate" onChange="DateFieldCheck(this,'format: 1');" onBlur="DateFieldCheckBlur(this);" class="fieldSM" value="#CurrentDate#"></td>
<!--- 		          		<td align="left"><script language="JavaScript">calendarPopup("main.ShiftStartDate","1","format: 1");</script></td>
			         	<td align="right">Shift Start Time:</td>
 ---> 			         	<td align="left"><input type="hidden" size="12" maxlength="10" name="ShiftStartTime" onFocus="timeFormatVerify(main.ShiftStartTime,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" onBlur="timeFormatVerify(main.ShiftStartTime,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" onChange="timeFormatVerify(main.ShiftStartTime,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" class="fieldSM"></td>
<!--- 			         	<td align="right">Shift End Date:</td>
 --->			         	<td align="left"><input type="hidden" size="12" maxlength="10" name="ShiftEndDate" onBlur="DateFieldCheck(this,'format: 1');" onChange="DateFieldCheckBlur(this);" class="fieldSM" value="#CurrentDate#"></td>
<!--- 		          		<td align="left"><script language="JavaScript">calendarPopup("main.ShiftEndDate","1","format: 1");</script></td>
			         	<td align="right">Shift End Time:</td>
 --->			         	<td align="left"><input type="hidden" size="12" maxlength="10" name="ShiftEndTime" onBlur="timeFormatVerify(this,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" onChange="timeFormatVerify(this,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" class="fieldSM"></td>
<!---            			</tr>
 --->          			</table>
         		</cfoutput>
         		</td>
        	</tr>
			<tr>
         		<td align="center" class="TopRow"><b>Order Info</b></td>
        	</tr>
			<tr>
         		<td>
          		<cfoutput>
   					<table cellpadding="5" cellspacing="0" border="0" width="100%">
    				<tr>
			         	<td align="right">Order Time:</td>
			         	<td align="left"><input type="textbox" size="7" maxlength="10" name="OrderTime" onFocus="timeFormatVerify(this,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" onBlur="timeFormatVerify(this,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" onChange="timeFormatVerify(this,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" class="fieldSM" value="#CurrentTime#"></td>
			         	<td align="left"><input type="textbox" size="12" maxlength="10" name="OrderDate" onChange="DateFieldCheck(this,'format: 1');" onBlur="DateFieldCheckBlur(this);" class="fieldSM" value="#CurrentDate#"></td>
			        	<td align="right">Control Nbr:</td>
			         	<td align="left"><input type="textbox" size="25" maxlength="20" name="ControlNbr" class="fieldSM" value=""></td>
			         	<td align="right">Segment:</td>
			         	<td align="left"><input type="textbox" size="2" maxlength="2" name="Segment" class="fieldSM" value="1" readonly="true">
<!--- 
			         <td align="right">Dispatch Time:</td>
			         <td align="left"><input type="textbox" size="12" maxlength="10" name="DispatchTime" class="fieldSM"></td>
			         <td>&nbsp;</td>
			         <td align="right">Order Time:</td>
			         <td align="left"><input type="textbox" size="12" maxlength="10" name="OrderTime" class="fieldSM" value="#CurrentTime#"></td>
 --->
           			</tr>
           			<tr>
			         	<td align="right">Time Needed:</td>
			         	<td align="left"><input type="textbox" size="7" maxlength="10" name="TimeNeeded" class="fieldSM" onChange="timeFormatVerify(document.main.TimeNeeded,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" onblur="timeFormatVerify(this,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');"></td>
			         	<td align="left"><input type="textbox" size="12" maxlength="10" name="DateNeeded" <!--- onChange="DateFieldCheck(this,'format: 1');" onBlur="DateFieldCheckBlur(this)" ---> onBlur="chkDateNeeded(this);" class="fieldSM"></td><!--- value="#CurrentDate#" --->
          		</cfoutput>

 			         	<td align="right">Pickup Location:</td>
           				<td colspan="2">
							<select name="PULocation" size="1" class="txtsv">
							<option value="" selected="selected"></option>
            				<cfoutput query="LocationInfo">
							<option value="#LocationInfo.FullLoc#">#LocationInfo.FullLoc#</option>  
			          		</cfoutput>
							<option value="Other">Other</option>
							</select>
            			</td>
            			<td align="left"><input type="textbox" size="12" maxlength="255" name="PULocationOther" class="fieldSM"></td>
					</tr>
					<tr>
						<cfoutput>
			         	<td align="right">Dispatch Time:</td>
			         	<td align="left"><input type="textbox" size="7" maxlength="10" name="DispatchTime" onFocus="timeFormatVerify(this,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" onBlur="chkDispatch(document.main.TimeNeeded.value, document.main.DispatchTime.value);" onChange="timeFormatVerify(this,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" class="fieldSM"></td>
			         	<td align="left"><input type="textbox" size="12" maxlength="10" name="DispatchDate" onChange="DateFieldCheck(this,'format: 1');" onBlur="DateFieldCheckBlur(this);" class="fieldSM"></td><!--- value="#CurrentDate#" --->
						</cfoutput> 
			         	<td align="right">Dest Location:</td>
            			<td colspan="2">
							<select name="DestLocation" size="1" class="txtsv">
							<option value="" selected="selected"></option>
            				<cfoutput query="LocationInfo">
							<option value="#LocationInfo.FullLoc#">#LocationInfo.FullLoc#</option>
            				</cfoutput>
							<option value="Other">Other</option>
							</select>
            			</td>
            			<td align="left"><input type="textbox" size="12" maxlength="255" name="DestLocationOther" class="fieldSM"></td>
          			</tr>
           			<tr>
						<cfoutput>
			         	<td align="right">Arrival at Pickup:</td>
			         	<td align="left"><input type="textbox" size="7" maxlength="10" name="ArrivalAtPU" onFocus="timeFormatVerify(this,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" onBlur="chkArrAtPU(document.main.DispatchTime.value, document.main.ArrivalAtPU.value);" onChange="timeFormatVerify(this,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" class="fieldSM"></td>
			         	<td align="left"><input type="textbox" size="12" maxlength="10" name="ArrAtPUDate" onChange="DateFieldCheck(this,'format: 1');" onBlur="DateFieldCheckBlur(this);" class="fieldSM"></td><!--- value="#CurrentDate#" --->
						<td>
<!--- 			         	</cfoutput>
 							<select name="Trn_Symb_List" id="TrSymLst" size="1" style="visibility:hidden" class="txtsv"  required="yes">
							<option value=""></option>
			            	<cfoutput query="TrainInfo">
							<option value="#TrainInfo.Trn_Symb# #TrainInfo.Trn_Day#">#TrainInfo.Trn_Symb# #TrainInfo.Trn_Day#</option>
			            	</cfoutput>
							</select></td>
						<cfoutput>
 --->           			<td colspan="3">&nbsp;</td>
					<tr>
					<tr>
			         	<td align="right">Actual Pickup Time:</td>
			         	<td align="left"><input type="textbox" size="7" maxlength="10" name="ActualPUTime" onFocus="timeFormatVerify(this,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" onBlur="chkActualPU(document.main.ArrivalAtPU.value, document.main.ActualPUTime.value);" onChange="timeFormatVerify(this,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" class="fieldSM"></td>
			         	<td align="left"><input type="textbox" size="12" maxlength="10" name="ActualPUDate" onChange="DateFieldCheck(this,'format: 1');" onBlur="DateFieldCheckBlur(this);" class="fieldSM"></td><!--- value="#CurrentDate#" --->
			         	<td align="right">Van Nbr:</td>
            			<td>
						</cfoutput>
							<select name="VanNbr" size="1" class="txtsv">
							<option value="OTHER" selected="selected">OTHER</option>
<!--- 							<option value="" selected="selected"></option>
 --->	            			<cfoutput query="VanInfo">
							<option value="#VanInfo.VanNbr#">#VanInfo.VanNbr#</option>
	            			</cfoutput>
							</select>
            			</td>
			       		<td align="right">Train Symbol 1:</td>
            			<td>
							<input type="textbox" size="12" name="Trn_Symb_Src" id="TrSymSrc" class="fieldSM" onblur="document.main.Trn_Symb_Src.value = document.main.Trn_Symb_Src.value.toUpperCase();">
           				</td>
<!--- 			        	<td align="right">Van Type:</td>
			         	<td align="left"><input type="textbox" size="12" maxlength="5" name="VanType" class="fieldSM"></td>
 --->           			</tr>
           			<tr>
						<cfoutput>
			         	<td align="right">Arrival at Dest Time:</td>
			         	<td align="left"><input type="textbox" size="7" maxlength="10" name="ArrivalAtDestTime" onFocus="timeFormatVerify(this,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" onBlur="chkArrDest(document.main.ActualPUTime.value, document.main.ArrivalAtDestTime.value);" onChange="timeFormatVerify(this,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" class="fieldSM"></td>
			         	<td align="left"><input type="textbox" size="12" maxlength="10" name="ArrivalAtDestDate" onChange="DateFieldCheck(this,'format: 1');" onBlur="DateFieldCheckBlur(this);" class="fieldSM"></td><!--- value="#CurrentDate#" --->
 			         	<td align="right">Driver:</td>
			         	<td align="left"><input type="textbox" size="30" maxlength="30" name="Driver" class="fieldSM"></td>
			       		<td align="right">Train Symbol 2:</td>
            			<td>
							<input type="textbox" size="12" name="Trn_Symb_Src2" id="TrSymSrc2" class="fieldSM" onblur="document.main.Trn_Symb_Src2.value = document.main.Trn_Symb_Src2.value.toUpperCase();">
           				</td>
          			</tr>
					<tr>
			         	<td align="right">Return to Hub Time:</td>
			         	<td align="left"><input type="textbox" size="7" maxlength="10" name="ReturnToHubTime" onFocus="timeFormatVerify(this,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" onBlur="chkRetHub(document.main.ArrivalAtDestTime.value, document.main.ReturnToHubTime.value);" onChange="timeFormatVerify(this,'Style: 24','Seconds: 0','AMPM: 1','TimeZone: 0');" class="fieldSM"></td>
			         	<td align="left"><input type="textbox" size="12" maxlength="10" name="ReturnToHubDate" onChange="DateFieldCheck(this,'format: 1');" onBlur="DateFieldCheckBlur(this);" class="fieldSM"></td><!--- value="#CurrentDate#" --->
	         			<td align="right">Crew:</td>
		         		<td align="left"><input type="textbox" size="30" maxlength="30" name="CrewInfo" class="fieldSM"></td>
						</cfoutput>
			       		<td align="right">Train Symbol 3:</td>
            			<td>
							<input type="textbox" size="12" name="Trn_Symb_Src3" id="TrSymSrc3" class="fieldSM" onblur="document.main.Trn_Symb_Src3.value = document.main.Trn_Symb_Src3.value.toUpperCase();">
           				</td>
					</tr>
          			</table>
         		</td>
        	</tr>
				<tr>
         			<td align="center" class="TopRow"><b>Comments</b></td>
        		</tr>
				<tr>
         			<td align="center">
   						<table cellpadding="5" cellspacing="0" border="0" width="100%">
    					<tr>
			         		<td align="right">Comments:</td>
			         		<td align="left"><textarea name="comments" cols=140 rows=7 class="fieldSM"></textarea></td>
           				</tr>
          				</table>
         			</td>
        		</tr>
        		<tr><td align="center">&nbsp;</td></tr>
        		<tr><td align="center" class="TopRow">&nbsp;</td></tr>
        		<tr><td align="center"><input type="button" onclick="AddRecord();" value=" Add "></td></tr>
			<cfoutput>
			<tr align="center">
				<td align="center"><a href="./RVT_Main.cfm?Hub_Filter=#url.Hub_Filter#">Return to Hub Filter Page</a></td>
			</tr>
			</cfoutput>
			</table>
			<CF_SSI VIRTUAL="/ssi/apps/groupbox/endgroupbox.txt">
			</form>
			</td>
		</tr>
		</table>
		</td>
	</tr>
	</table>

	<CF_SSI VIRTUAL="/ssi/apps/pleasewait/inlinePleaseWaitEnd.txt">
	<CF_SSI VIRTUAL="/ssi/apps/footer.txt">
	<script language="JavaScript">
	<!--
//		validateField(document.main.ShiftStartDate, "Date", "FORMAT: mm/dd/yyyy" , "required~ You must Specify a Beginning Date to run the Report");
//		validateField(document.main.ShiftEndDate, "Date", "FORMAT: mm/dd/yyyy" , "required~ You must Specify a Ending Date to run the Report");
//		validateField(document.main.ETAPDate, "Date", "FORMAT: mm/dd/yyyy" , "required~ You must Specify a Beginning Date to run the Report");
//		validateField(document.main.DispatchDate, "Date", "FORMAT: mm/dd/yyyy" , "required~ You must Specify a Ending Date to run the Report");
//		validateField(document.main.OrderDate, "Date", "FORMAT: mm/dd/yyyy" , "required~ You must Specify a Beginning Date to run the Report");
//		validateField(document.main.ActualPUDate, "Date", "FORMAT: mm/dd/yyyy" , "required~ You must Specify a Ending Date to run the Report");
//		validateField(document.main.ArrivalAtDestDate, "Date", "FORMAT: mm/dd/yyyy" , "required~ You must Specify a Beginning Date to run the Report");
//validateRequiredField($('Trn_Symb_Src'),"AlphaNumeric","required~ \"Train Symbol\" field is required.");
//		validateField(document.main.ShiftStartTime, "Time", "style: 24" , "required~ You must Specify a Beginning Date to run the Report");
//  validateRequiredField(document.main.DeskID, "AlphaNumeric", "required~ You must give the package a name.");
//  validateRequiredField(document.main.UserID, "AlphaNumeric", "required~ You must enter a package description.");
	// -->
	</script>
</body>
</html>